name: GitHub Secrets & Environment Configuration Demo

on:
  workflow_dispatch:  # Manual trigger for demonstration
  push:
    branches: [ demo-secrets ]

env:
  # Environment variables from GitHub secrets
  ENVIRONMENT: ${{ secrets.ENVIRONMENT || 'development' }}
  LOG_LEVEL: ${{ secrets.LOG_LEVEL || 'INFO' }}

jobs:
  secrets-demo:
    name: Demonstrate Secrets Management
    runs-on: ubuntu-latest
    
    environment: 
      name: ${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Environment Detection
      run: |
        echo "🌍 Environment: ${{ env.ENVIRONMENT }}"
        echo "📊 Log Level: ${{ env.LOG_LEVEL }}"
        echo "🔧 Branch: ${{ github.ref_name }}"
        
    - name: Database Configuration (Secure)
      env:
        MONGODB_URI: ${{ secrets.MONGODB_URI }}
        REDIS_URL: ${{ secrets.REDIS_URL }}
      run: |
        echo "🔒 Database Configuration:"
        echo "MongoDB URI: ${MONGODB_URI:0:20}..." # Show only first 20 chars
        echo "Redis URL: ${REDIS_URL:0:15}..." # Show only first 15 chars
        echo "✅ Database secrets loaded securely"
        
    - name: API Keys Configuration (Secure)
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
        RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
      run: |
        echo "🔑 API Keys Configuration:"
        echo "OpenAI Key: ${OPENAI_API_KEY:0:10}..." # Show only first 10 chars
        echo "Groq Key: ${GROQ_API_KEY:0:10}..." # Show only first 10 chars
        echo "Render Key: ${RENDER_API_KEY:0:10}..." # Show only first 10 chars
        echo "✅ API keys loaded securely"
        
    - name: Application Configuration
      env:
        APP_SECRET_KEY: ${{ secrets.APP_SECRET_KEY }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}
      run: |
        echo "🛡️ Application Security Configuration:"
        echo "App Secret: ${APP_SECRET_KEY:0:8}..." # Show only first 8 chars
        echo "JWT Secret: ${JWT_SECRET:0:8}..." # Show only first 8 chars
        echo "Encryption Key: ${ENCRYPTION_KEY:0:8}..." # Show only first 8 chars
        echo "✅ Security secrets loaded"
        
    - name: Environment-Specific Configuration
      run: |
        echo "⚙️ Environment-Specific Settings:"
        
        if [ "${{ env.ENVIRONMENT }}" = "production" ]; then
          echo "🚀 Production Configuration:"
          echo "- Debug Mode: OFF"
          echo "- SSL Required: YES"
          echo "- Rate Limiting: STRICT"
          echo "- Logging: ERROR level"
          echo "- Monitoring: ENABLED"
        elif [ "${{ env.ENVIRONMENT }}" = "staging" ]; then
          echo "🧪 Staging Configuration:"
          echo "- Debug Mode: LIMITED"
          echo "- SSL Required: YES"
          echo "- Rate Limiting: MODERATE"
          echo "- Logging: WARN level"
          echo "- Monitoring: ENABLED"
        else
          echo "🔧 Development Configuration:"
          echo "- Debug Mode: ON"
          echo "- SSL Required: NO"
          echo "- Rate Limiting: RELAXED"
          echo "- Logging: DEBUG level"
          echo "- Monitoring: BASIC"
        fi
        
    - name: Deployment Configuration
      env:
        RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
        DEPLOYMENT_WEBHOOK: ${{ secrets.DEPLOYMENT_WEBHOOK }}
      run: |
        echo "🚀 Deployment Configuration:"
        echo "Service ID: ${RENDER_SERVICE_ID:0:12}..." # Show only first 12 chars
        echo "Webhook: ${DEPLOYMENT_WEBHOOK:0:25}..." # Show only first 25 chars
        echo "✅ Deployment secrets configured"
        
    - name: Security Validation
      run: |
        echo "🔒 Security Validation:"
        
        # Check if critical secrets are present
        if [ -z "${{ secrets.MONGODB_URI }}" ]; then
          echo "⚠️ WARNING: MONGODB_URI secret not configured"
        else
          echo "✅ Database connection secret present"
        fi
        
        if [ -z "${{ secrets.OPENAI_API_KEY }}" ]; then
          echo "⚠️ WARNING: OPENAI_API_KEY secret not configured"
        else
          echo "✅ OpenAI API key present"
        fi
        
        if [ -z "${{ secrets.APP_SECRET_KEY }}" ]; then
          echo "⚠️ WARNING: APP_SECRET_KEY secret not configured"
        else
          echo "✅ Application secret key present"
        fi
        
        echo "🛡️ Security validation completed"
        
    - name: Configuration Summary
      run: |
        echo "📋 Configuration Summary:"
        echo "================================"
        echo "Environment: ${{ env.ENVIRONMENT }}"
        echo "Branch: ${{ github.ref_name }}"
        echo "Commit: ${{ github.sha }}"
        echo "Actor: ${{ github.actor }}"
        echo "Workflow: ${{ github.workflow }}"
        echo "Run ID: ${{ github.run_id }}"
        echo "================================"
        echo "✅ Secrets and environment configuration demo completed"

  environment-matrix:
    name: Multi-Environment Demo
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [development, staging, production]
        
    steps:
    - name: Environment-specific setup
      run: |
        echo "🌍 Setting up ${{ matrix.environment }} environment"
        
        case "${{ matrix.environment }}" in
          "production")
            echo "DEPLOY_URL=https://financial-simulator.render.com" >> $GITHUB_ENV
            echo "HEALTH_CHECK_URL=https://financial-simulator.render.com/health" >> $GITHUB_ENV
            echo "MONITORING_ENABLED=true" >> $GITHUB_ENV
            ;;
          "staging")
            echo "DEPLOY_URL=https://financial-simulator-staging.render.com" >> $GITHUB_ENV
            echo "HEALTH_CHECK_URL=https://financial-simulator-staging.render.com/health" >> $GITHUB_ENV
            echo "MONITORING_ENABLED=true" >> $GITHUB_ENV
            ;;
          "development")
            echo "DEPLOY_URL=http://localhost:8000" >> $GITHUB_ENV
            echo "HEALTH_CHECK_URL=http://localhost:8000/health" >> $GITHUB_ENV
            echo "MONITORING_ENABLED=false" >> $GITHUB_ENV
            ;;
        esac
        
    - name: Display environment configuration
      run: |
        echo "📊 ${{ matrix.environment }} Configuration:"
        echo "Deploy URL: ${{ env.DEPLOY_URL }}"
        echo "Health Check: ${{ env.HEALTH_CHECK_URL }}"
        echo "Monitoring: ${{ env.MONITORING_ENABLED }}"
        echo "✅ Environment configured successfully"
